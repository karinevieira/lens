name: CI
on: [push]
jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Get file changes
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ' '

      - name: Filter Ruby files
        id: filter_ruby_files
        run: |
          files="${{ steps.get_file_changes.outputs.files }}"
          ruby_files=$(echo "$files" | tr ' ' '\n' | grep '\.rb$' | tr '\n' ' ')
          echo "::set-output name=ruby_files::$ruby_files"

      - name: Echo Ruby file changes
        run: |
          echo Changed Ruby files: ${{ steps.filter_ruby_files.outputs.ruby_files }}

      - name: Lint Pull Request
        uses: wearerequired/lint-action@v2
        with:
          rubocop: true
          rubocop_args: --fail-level C --display-only-fail-level-offenses ${{ steps.filter_ruby_files.outputs.ruby_files }}
          rubocop_command_prefix: bundle exec

      - name: Lint Ruby files
        run: bundle exec rubocop

      - name: Lint html.erb files
        run: bundle exec erblint --lint-all

  brakeman:
    name: Brakeman
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1

      - name: Install brakeman
        run: gem install brakeman

      - name: Scan code
        run: brakeman -A -z -q

  rspec:
    name: RSpec
    needs:
      - linters
      - brakeman
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:example@localhost:5432/lens_test
    services:
      postgres:
        image: postgres:14.2
        ports: ['5432:5432']
        env:
          POSTGRES_DB: lens_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install postgres client
        run: sudo apt-get install libpq-dev

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version-file: '.node-version'

      - name: Install Yarn packages
        run: yarn install --check-files --pure-lockfile

      - name: Compile Assets
        run: |
          bin/rails css:build
          bin/rails javascript:build

      - name: Create database structure
        run: RAILS_ENV=test bundle exec rails db:create db:schema:load

      - name: Run tests
        run: bundle exec rspec spec --format progress
